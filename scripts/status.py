# Utilisation:
# <p>status help

import discord
from discord.ext import commands
import asyncio

class StatusChanger(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def status(self, ctx, statustype: str = None, activitytype: str = None, *, activite: str = None):
        """
        Change le statut et/ou l'activit√©
        """
        msg = ctx.message

        if statustype is None or statustype.lower() == "help":
            helpmsg = (
                "## üìú **Commande status:** üìú\n\n"
                "**Description**: Permet de changer le statut et l'activit√©\n\n"
                "**options √† mettre apr√®s <p>status**\n"
                "  `online`, `idle`, `dnd`, `invisible`\n"
                "  `clear`: supprime tout statut ou activit√©\n\n"
                "**options d'activit√©:**\n"
                "  `playing`: joue √† <activit√©>\n"
                "  `streaming`: en direct <activit√©>\n"
                "  `listening`: √©coute <activit√©>\n"
                "  `watching`: regarde <activit√©>\n\n"
                "**exemples:**\n"
                f"`{ctx.prefix}status online playing Minecraft`\n"
                f"`{ctx.prefix}status dnd streaming intrusif`\n"
                f"`{ctx.prefix}status clear`\n"
            )
            await ctx.message.edit(content=helpmsg)
            await asyncio.sleep(15)
            await msg.delete()
            return

        if statustype.lower() == "clear":
            # R√©initialiser le statut et supprimer l'activit√©
            await self.bot.change_presence(status=discord.Status.invisible, activity=None)
            await ctx.message.edit(content="‚úÖ Statut r√©initialis√© ‚úÖ")
            await asyncio.sleep(2)
            await msg.delete()
            return

        statusdef = {
            "online": discord.Status.online,
            "idle": discord.Status.idle,
            "dnd": discord.Status.dnd,
            "invisible": discord.Status.invisible,
        }
        status = statusdef.get(statustype.lower(), discord.Status.online)

        # D√©finir l'activit√©
        activity = None
        if activitytype and activite:
            activitytype = activitytype.lower()
            if activitytype == "playing":
                activity = discord.Game(name=activite)
            elif activitytype == "streaming":
                activity = discord.Streaming(name=activite, url="https://twitch.tv/luther")  # Remplace par une URL r√©elle si besoin
            elif activitytype == "listening":
                activity = discord.Activity(type=discord.ActivityType.listening, name=activite)
            elif activitytype == "watching":
                activity = discord.Activity(type=discord.ActivityType.watching, name=activite)

        # Appliquer le statut et l'activit√©
        await self.bot.change_presence(status=status, activity=activity)
        await ctx.message.edit(content="‚úÖ Statut chang√© ‚úÖ")
        await asyncio.sleep(2)
        await msg.delete()

def setup(bot):
    bot.add_cog(StatusChanger(bot))
